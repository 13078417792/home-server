<?php
/**
 * Created by PhpStorm.
 * User: 39720
 * Date: 2018/10/30
 * Time: 16:56
 */

namespace app\back\controller;
use \app\link\controller\Images;
use \app\back\model\ChatGroup as ChatGroupModel;
use \app\back\model\ChatGroupUserRelation as ChatGroupUserRelation;

class Chat extends Base{

//    protected function _initialize()
//    {
//        parent::_initialize(); // TODO: Change the autogenerated stub
//        self::hasUserDetail(true);
//    }

    // 上传群头像
    public function uploadGroupAvatar(){
        $avatar = request()->file('avatar');
        $path = config('common')['path']['image'].DS.'chat-group';
        $info = $avatar->validate(['size'=>1024*1024*2,'ext'=>'png,jpg'])->move($path);
        if($info){
            $url = Images::buildUrl($path.DS.$info->getSaveName());
            return json2(true,'',['avatar'=>$url]);
        }else{
            return json2(false,'上传失败',['error'=>$file->getError()]);
        }
    }

    // 创建群组
    public function createGroup(){
        $data = [
            'name'=>request()->post('name/s',null,'strval'),
            'member'=>request()->post('member/a',[]),
            'thumb'=>request()->post('thumb/s',null,'strval')
        ];
        $result = model('ChatGroup')->add($data);
        if($result===true){
            $websocket_createGroup_cache = substr(md5(uniqid()),8,16);
            $data['id'] = model('ChatGroup')->id;
            $group = db('chat_group')
                ->alias('a')
                ->join('admin b','a.creator=b.id and b.status=1')
                ->where(['a.id'=>model('ChatGroup')->id])
                ->field('a.id,a.name,a.thumb,FROM_UNIXTIME(a.time) AS time,a.creator as creator_uid,b.username as creator_username,b.nickname as creator_nickname')
                ->find();
            cache($websocket_createGroup_cache,json_encode($group));
            return json2(true,'创建成功',['createGroup_token'=>$websocket_createGroup_cache]);
        }else{
            return json2(false,'创建失败',['error'=>$result]);
        }


    }

    // 获取群组
    public function getGroup(){
        $result = model('ChatGroup')->getList();
        return json2(true,'',['groupList'=>$result]);
    }

    // 获取群组成员
    public function getGroupMember(){
        $group_id = request()->post('group_id/d',0,'intval');
        $uid = $GLOBALS['USER_DETAIL']['id'];
        $result = model('ChatGroup')->getGroupMember($group_id,$uid);
        return json2(true,'',['result'=>$result]);
    }
}